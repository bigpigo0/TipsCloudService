<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="nlog" type="NLog.Config.ConfigSectionHandler, NLog" />
  </configSections>
    <system.diagnostics>
        <trace>
            <listeners>
                <add type="Microsoft.WindowsAzure.Diagnostics.DiagnosticMonitorTraceListener, Microsoft.WindowsAzure.Diagnostics, Version=2.6.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
                    name="AzureDiagnostics">
                    <filter type="" />
                </add>
            </listeners>
        </trace>
    </system.diagnostics>
    <system.serviceModel>
      <behaviors>
        <serviceBehaviors>
          <behavior name="">
            <serviceMetadata httpGetEnabled="true" httpsGetEnabled="true" />
            <serviceDebug includeExceptionDetailInFaults="false" />
          </behavior>
        </serviceBehaviors>

        <endpointBehaviors>
          <behavior name="rest">
            <webHttp/>
            <corsBehavior/>
          </behavior>
        </endpointBehaviors>

      </behaviors>
      <services>
        <service name="WcfWorkerRole.TipService">
          <endpoint address="/wcf" behaviorConfiguration="rest" binding="webHttpBinding"
            name="seach-REST" contract="WcfWorkerRole.ITipService">
            <identity>
              <dns value="localhost" />
            </identity>
          </endpoint>
          <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
        </service>
      </services>


      <standardEndpoints>
        <webHttpEndpoint>
          <standardEndpoint name="http://127.0.0.1:9002" helpEnabled="true" automaticFormatSelectionEnabled="true"/>
        </webHttpEndpoint>
      </standardEndpoints>
      <extensions>
        <behaviorExtensions>
          <add name="corsBehavior"
               type="WcfWorkerRole.Behaviors.CorsBehavior, WcfWorkerRole, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"/>
        </behaviorExtensions>
      </extensions>
    </system.serviceModel>
  <nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <variable name="layoutDefaultPrefix" value="${longdate}|${level:uppercase=true}|${threadid}"/>
    <variable name="layoutDefaultMessage" value="${message}"/>
    <!--<targets>
      <target name="appLogFileAsync" xsi:type="File" fileName="logs\MessageWorker_Current.log" layout="${longdate} ${level:uppercase=true:padding=5} ${processid} ${message}" archiveFileName="logs\MessageWorker_{#}.txt" archiveEvery="Day" archiveNumbering="Date" archiveDateFormat="yyyy-MM-dd_HH-mm-ss" maxArchiveFiles="14" concurrentWrites="false" keepFileOpen="false" encoding="iso-8859-2" />
    </targets>-->
    <targets>
      <target name="appLogFileAsync" xsi:type="AsyncWrapper" queueLimit="15000" overflowAction="Block">
        <target name ="appLogFile" xsi:type="File"
          fileName="logs/${shortdate}.log"
          layout="${layoutDefaultPrefix}|${layoutDefaultMessage}"
          archiveAboveSize="33554432"
          maxArchiveFiles="10" />
      </target>
      <target xsi:type="ColoredConsole" name ="consoleLog" layout="${layoutDefaultPrefix}|${layoutDefaultMessage}"/>
    </targets>
    <rules>
      <logger name="*" levels="Info,Debug,Error" writeTo="appLogFile" />
    </rules>
  </nlog>
</configuration>